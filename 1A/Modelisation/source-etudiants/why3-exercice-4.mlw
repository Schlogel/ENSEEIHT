(* BE : Session 1 2019 *)
(* Implémentation de la fonction somme des premiers entiers par un algorithme ascendant *)

module Somme

  use int.Int
  use int.ComputerDivision
  use ref.Refint

  let somme (n: int) : int
    requires { true (* A compléter *) }
    ensures  { true (* A compléter *) }
  =
    let i = ref 0 in
    let r = ref 0 in
    while  (!i < n) do
      invariant { true (* A compléter *) }
      variant   { 1 (* A compléter *) }
      i := (!i) + 1;
      r :=  (!r) + (!i)
    done;
    !r

end
